# vim ft=yaml

# After changing this file, check it on:
#   http://lint.travis-ci.org/

# The conda installation part was taken from Dan Blancahrd's gist
# https://gist.github.com/dan-blanchard/7045057

language: python

python:
    - 2.6

matrix:
    include:
        - python: 2.7
          env:
            - PYTHON=python PYTHONWARNINGS=all PYTHONX=python PYVER=2.x
        - python: 3.3
          env:
            - PYTHON=python3 PYTHONWARNINGS=all PYTHONX=python3 PYVER=3.x
    exclude:
        - python: 2.6

virtualenv:
    system_site_packages: true

before_install:
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start

    - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
    - chmod +x miniconda.sh
    - ./miniconda.sh -b
    - export PATH=/home/travis/miniconda/bin:$PATH
    - conda update --yes conda
    # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
    - sudo rm -rf /dev/shm
    - sudo ln -s /run/shm /dev/shm

    - conda install --yes python=$TRAVIS_PYTHON_VERSION numpy scipy


    - sudo apt-get update

    - wget https://raw.githubusercontent.com/numpy/numpy/master/numpy/_import_tools.py -O /home/travis/virtualenv/python3.2_with_system_site_packages/lib/python3.2/site-packages/numpy/_import_tools.py

    - sudo apt-get install libfreeimage3

    - if [[ $PYVER == '2.x' ]]; then
    -   sudo apt-get install $PYTHON-qt4;
    -   sudo apt-get install $PYTHON-matplotlib;
    - fi
    - if [[ $PYVER == '3.x' ]]; then
    -   sudo apt-get install $PYTHON-pyqt4;
    -   pip install --use-mirrors matplotlib;
    - fi

    - pip install pillow
    - pip install cython
    - pip install flake8
    - pip install six
    - pip install networkx

    - pip install nose-cov
    - pip install coveralls

    - python check_bento_build.py

install:
    - tools/header.py "Dependency versions"
    - tools/build_versions.py

    - python setup.py build_ext --inplace

script:
    # Matplotlib settings
    - mkdir -p $HOME/.matplotlib
    - touch $HOME/.matplotlib/matplotlibrc
    - "echo 'backend : Agg' > $HOME/.matplotlib/matplotlibrc"
    - "echo 'backend.qt4 : PyQt4' >> $HOME/.matplotlib/matplotlibrc"

    # Run all tests
    - if [[ $PYVER == '3.x' ]]; then
    -   nosetests --exe -v --with-doctest --with-cov --cov skimage --cov-config=.coveragerc skimage
    - fi
    - if [[ $PYVER == '2.x' ]]; then
    -   nosetests --exe -v --with-doctest skimage
    - fi
    # Run all doc examples
    - export PYTHONPATH=$(pwd):$PYTHONPATH
    - for f in doc/examples/*.py; do $PYTHONX "$f"; if [ $? -ne 0 ]; then exit 1; fi done
    - for f in doc/examples/applications/*.py; do $PYTHONX "$f"; if [ $? -ne 0 ]; then exit 1; fi done

    # Run pep8 and flake tests
    - flake8 --exit-zero --exclude=test_*,six.py skimage doc/examples viewer_examples

after_success:
    - if [[ $PYVER == '3.x' ]]; then
    -   coveralls
    - fi
